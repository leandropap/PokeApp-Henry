{"version":3,"sources":["components/Landing.jsx","App.js","reportWebVitals.js","redux/actions/index.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["Landing","to","App","className","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GET_POKEMONS","GET_POKETYPES","initialState","pokemons","pokeTypes","rootReducer","state","action","type","payload","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAGe,SAASA,IACpB,OACI,gCACI,+BACI,sDACA,gDAEJ,cAAC,IAAD,CAAMC,GAAG,QAAT,SACI,uDAIf,CCDcC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWN,KAGtC,ECAcO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,E,wCCJYQ,G,iBAAe,gBAGfC,EAAgB,gBCPvBC,EAAe,CACjBC,SAAU,GACVC,UAAW,IAiBAC,EAdK,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAClD,OAAQA,EAAOC,MACX,KAAKR,EAAc,OAAO,2BACnBM,GADY,IAEfH,SAAUI,EAAOE,UAErB,KAAKR,EAAe,OAAO,2BACpBK,GADa,IAEhBF,UAAWG,EAAOE,UAEtB,QAAS,OAAOH,EAEvB,ECdYI,EAAQC,sBACjBN,EACAO,8BAAoBC,0BAAgBC,OCExCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINQ,SAASC,eAAe,SAM1B5B,G","file":"static/js/main.9cfdb6ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Landing() {\r\n    return (\r\n        <div>\r\n            <h1>\r\n                <p>Henry Pokemon Web App</p>\r\n                <p>Landing Page</p>\r\n            </h1>\r\n            <Link to='/home'>\r\n                <button>Catch'em All!</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n};\r\n\r\n","import './App.css';\n// import { BrowserRouter, Router, Switch } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport Landing from './components/Landing'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route exact path='/' component={Landing} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\r\n// Aqui debo realizar la conexion entre el back end y el front end.\r\n// De manera analoga a como lo haciamos en el M2, llamando a una api externa,\r\n// en esta ocasion la ruta que nos dara los datos que mostramos en el front debe ser local.\r\n// Esto es, llamar al directorio donde se encuentra nuestr back end.\r\n\r\nexport const GET_POKEMONS = 'GET_POKEMONS';\r\nexport const GET_POKE_BY_ID = 'GET_POKE_BY_ID';\r\nexport const POST_POKEMON = 'POST_POKEMON';\r\nexport const GET_POKETYPES = 'GET_POKETYPES';\r\n\r\n//Action Creators\r\nexport const getPokemons = async () => {\r\n    return async function (dispatch) {\r\n        let pokemons = await axios.get('http://localhost:3001/pokemons');\r\n\r\n        return dispatch({\r\n            type: GET_POKEMONS,\r\n            payload: pokemons.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getPokeTypes = async () => {\r\n    return async function (dispatch) {\r\n        let pokeTypes = await axios.get('http://localhost:3001/type');\r\n\r\n        return dispatch({\r\n            type: GET_POKETYPES,\r\n            payload: pokeTypes.data\r\n        });\r\n    };\r\n};\r\n\r\n","import { GET_POKEMONS, GET_POKE_BY_ID, POST_POKEMON, GET_POKETYPES } from \"../actions\";\r\n\r\nconst initialState = {\r\n    pokemons: [],\r\n    pokeTypes: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_POKEMONS: return {\r\n            ...state,\r\n            pokemons: action.payload,\r\n        };\r\n        case GET_POKETYPES: return {\r\n            ...state,\r\n            pokeTypes: action.payload,\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n); ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider >\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}